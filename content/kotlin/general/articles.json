[
  {
    "id": 301,
    "title": "Что такое Kotlin. Первая программа",
    "url": "/tutorials/kotlin/general/intro",
    "chapter": 1,
    "keywords": "консоль, progvibe, кроссплатформенность, типы данных, значение, документация, Android, пример, переменная, print, JVM, переменные, хабр, отладка, блок кода, metanit, строка, инструкция, язык программирования, IntelliJ IDEA, Что такое Kotlin. Первая программа, ошибка, код, println, исключение, синтаксис, Hello World, программирование, как научиться программировать, Java, вывод, компилятор, метанит, Android Studio, статьи, запуск, практическое применение \n, Kotlin, прогвайб, progvibe.ru, habr, компиляция, оператор, функции, обучение, обучающие статьи по программированию, IDE, комментарий, проект, операторы",
    "description": "",
    "name": "intro"
  },
  {
    "id": 302,
    "title": "Структура программы",
    "url": "/tutorials/kotlin/general/program_structure",
    "chapter": 2,
    "keywords": "progvibe, байт-код, константы, типы данных, объектно-ориентированное программирование, циклы, хабр, переменные, библиотеки, тестирование, подпрограммы, отладка, документация. \n, metanit, управление потоком, инкапсуляция, полиморфизм, наследование, объекты, абстракция, исполняемый код, процедурное программирование, классы, методы, фреймворки, модульность, программирование, как научиться программировать, метанит, статьи, атрибуты, Структура программы, алгоритмы, блочная диаграмма, иерархическая структура, пакеты, прогвайб, progvibe.ru, habr, ветвления, компиляция, процедуры, функции, интерпретация, обучение, обучающие статьи по программированию, модули, выражения, операторы",
    "description": "",
    "name": "program_structure"
  },
  {
    "id": 303,
    "title": "Переменные и типы данных",
    "url": "/tutorials/kotlin/general/variables_types",
    "chapter": 2,
    "keywords": "Переменные, machine learning, char, progvibe, scope, типы данных, variable declaration, implicit conversion, artificial intelligence. \n, хабр, assignment, string, dictionary, memory allocation, metanit, explicit conversion, data storage, data structure, object, programming languages, deep learning, boolean, type casting, data science, data analysis, list, integer, data manipulation, программирование, как научиться программировать, software development, Переменные и типы данных, метанит, статьи, class, прогвайб, progvibe.ru, habr, data type, set, обучение, обучающие статьи по программированию, array, data type conversion, float",
    "description": "",
    "name": "variables_types"
  },
  {
    "id": 304,
    "title": "Консольный ввод и вывод",
    "url": "/tutorials/kotlin/general/console_io",
    "chapter": 2,
    "keywords": "стандартный ввод, терминал, число, progvibe, ввод, пользовательский интерфейс, командная строка, исключения, буферизация, переменная, инструменты, хабр, stdin, формат, stdout, автоматизация, отладка, metanit, операционная система, строка, функция, потоки, язык программирования, взаимодействие, stderr, символ, стандартная ошибка, программирование, как научиться программировать, библиотека, скрипты, вывод, тестирование \n, метанит, обработка ошибок, статьи, стандартный вывод, прогвайб, progvibe.ru, habr, Консоль, обучение, обучающие статьи по программированию, сценарии, форматирование, утилиты, Консольный ввод и вывод",
    "description": "",
    "name": "console_io"
  },
  {
    "id": 305,
    "title": "Операции с числами",
    "url": "/tutorials/kotlin/general/number_operations",
    "chapter": 2,
    "keywords": "ошибка округления, двоичная система счисления, progvibe, Операции с числами, десятичная система счисления,  потери точности, хабр, низкоуровневое программирование, целочисленное деление, точность вычислений, metanit,  алгоритмы обработки чисел, представление чисел, битовые сдвиги, шестнадцатеричная система счисления, векторизация,  методы численного анализа, переполнение, сравнение чисел,  разрядность, операции с матрицами, логические операции, битовые операции, ассемблерный язык, преобразование типов, остаток от деления, экспоненциальная запись,  представление отрицательных чисел, алгоритмы оптимизации, программирование, оптимизация производительности, как научиться программировать, дробные числа, метанит, статьи, дополнение до двух,  машинные инструкции,  сигнальные процессоры, модульное сложение, прогвайб, progvibe.ru, habr,  ошибки вычислений, Арифметические операции, операции с плавающей запятой, обучение,  специализированные операции. \n, обучающие статьи по программированию",
    "description": "",
    "name": "number_operations"
  },
  {
    "id": 306,
    "title": "Условные выражения и конструкции",
    "url": "/tutorials/kotlin/general/conditionals",
    "chapter": 2,
    "keywords": "семантика, progvibe, оператор сравнения, switch-case, оператор равенства, блоки кода, хабр, except, PHP. \n, if, metanit, default, обработка исключений, Условные выражения, конструкции, логика, управление потоком, NOT, читаемость кода, условия в циклах, язык программирования, else, elif, оптимизация, стиль кода, finally, код, синтаксис, Python, JavaScript, программирование, как научиться программировать, OR, AND, Java, метанит, статьи, алгоритмы, Условные выражения и конструкции, прогвайб, progvibe.ru, habr, цикл while, case, try, логические операторы, эффективность, вложенные условия, цикл for, обучение, обучающие статьи по программированию, ветвление кода, C++, тернарный оператор",
    "description": "",
    "name": "conditionals"
  },
  {
    "id": 307,
    "title": "Конструкция when",
    "url": "/tutorials/kotlin/general/when_statement",
    "chapter": 2,
    "keywords": "семантика, progvibe, алгоритм, исключения, хабр, язык, if, metanit, структура. \n, логика, кодирования, неравенство, производительность, else, оптимизация, стиль, читаемость, код, Конструкция when, истинность, синтаксис, условие, ложность, сравнение, when, больше, switch, выбор, программирование, как научиться программировать, метанит, статьи, конструкция, прогвайб, progvibe.ru, обработка, habr, case, понятность,  улучшение, эффективность, ошибок, оператор, программирования, обучение, обучающие статьи по программированию, логическое выражение, равенство, меньше, ветвление",
    "description": "",
    "name": "when_statement"
  },
  {
    "id": 308,
    "title": "Циклы",
    "url": "/tutorials/kotlin/general/loops",
    "chapter": 2,
    "keywords": " разработка ПО, progvibe,  программирование на Java, массивы, списки, итерации, циклы,  вложенные циклы, хабр,  языка программирования, metanit,  программирование на Python, оптимизация, скорость выполнения, break, условия, повторение,  программирование на JavaScript. \n, Python,  рекурсия, бесконечные циклы, continue,  программирование на C++, цикл do-while, JavaScript, программирование, как научиться программировать,  структуры данных, Java, метанит, статьи, счетчик, алгоритмы,  эффективность,  практика, прогвайб, progvibe.ru, habr, цикл while, прерывание цикла, цикл for, обучение, обучающие статьи по программированию, C++,  уроки программирования, итеративный подход, Циклы, строки, примеры кода",
    "description": "",
    "name": "loops"
  },
  {
    "id": 309,
    "title": "Диапазоны",
    "url": "/tutorials/kotlin/general/ranges",
    "chapter": 2,
    "keywords": "полоса пропускания, МГц, Wi-Fi, progvibe, частотный диапазон, диапазон рабочих частот, децибелы, хабр, радиочастоты, радиочастотное регулирование. \n, уровень сигнала, ширина полосы, metanit, радиочастотный спектр, Диапазоны, частота, радиоволны, управление спектром, кГц, анализ спектра, радиочастотное планирование, спектральный анализ, dBm, программирование, как научиться программировать, спектроанализатор, герц, метанит, статьи, мощность сигнала, интерференция, диапазоны, электромагнитные волны, прогвайб, progvibe.ru, спектр, habr, шум, 5G, длина волны, ГГц, обучение, обучающие статьи по программированию, сигнал, диапазон частот, Bluetooth",
    "description": "",
    "name": "ranges"
  },
  {
    "id": 310,
    "title": "Массивы",
    "url": "/tutorials/kotlin/general/arrays",
    "chapter": 2,
    "keywords": " JavaScript, progvibe, алгоритм, столбец, цикл,  SQL,  структура данных, хабр,  создание,  алгоритмы, индекс, поиск, metanit, строка, доступ,  память,  сборка мусора, одноразмерный, оптимизация, итерация,  отладка,  Java, тип данных, заполнение, инициализация, Python, многомерный, программирование, как научиться программировать, метанит, сортировка, статьи, статический,  эффективность, PHP, элемент, Массивы,  базы данных, progvibe.ru, прогвайб, habr, изменение, обучение, обучающие статьи по программированию, C++,  программирование. \n, Массив, размер, динамический",
    "description": "",
    "name": "arrays"
  },
  {
    "id": 311,
    "title": "Функции и их параметры. Оператор return",
    "url": "/tutorials/kotlin/general/functions",
    "chapter": 3,
    "keywords": "область видимости,  ошибки,  тестирование, return, progvibe,  объекты, документация,  свойства. \n, исключения, хабр, объявление функции,  реализации,  рефакторинг, metanit,  дебаггинг, вызов функции,  модульность, глобальные переменные, оптимизация, стек вызовов,  стиль кода,  методы, передача по значению,  фреймворки, синтаксис, локальные переменные, Python,  классы, возвращаемое значение, JavaScript,  атрибуты, программирование,  библиотеки, как научиться программировать, рекурсия, Java, метанит, статьи, обработка ошибок, Функции, прогвайб, передача по ссылке,  встроенные функции, progvibe.ru, habr, Функции и их параметры. Оператор return, параметры, обучение, обучающие статьи по программированию, аргументы, C++, примеры кода",
    "description": "",
    "name": "functions"
  },
  {
    "id": 312,
    "title": "Переменное количество параметров. Vararg",
    "url": "/tutorials/kotlin/general/varargs",
    "chapter": 3,
    "keywords": "progvibe, Code Reusability, Ruby, Reflection, Performance Optimization, Coding Standards. \n, хабр, metanit, Collection, Overloading, Vararg, Go, Variable Argument List, Data Structures, Python, JavaScript, программирование, как научиться программировать, Optional Parameter, Java, Parameter Type, метанит, статьи, Variable Number of Arguments, Best Practices, Переменное количество параметров. Vararg, C#, PHP, Kotlin, Swift, Polymorphism, Method Parameter, Parameter Passing, progvibe.ru, прогвайб, habr, List, Algorithms, Default Parameter, обучение, обучающие статьи по программированию, Array, Dynamic Programming, Function Parameter, Argument Handling",
    "description": "",
    "name": "varargs"
  },
  {
    "id": 313,
    "title": "Однострочные и локальные функции",
    "url": "/tutorials/kotlin/general/inline_local_func",
    "chapter": 3,
    "keywords": "Функция, Code readability, progvibe, Функциональное программирование, Параметры, Императивное программирование, Локальная функция, Анонимная функция, Вызов функции, хабр, Scope, metanit, Code maintainability, Efficiency, Performance, Рекурсия, Ламбда-выражение, Однострочная функция, Декоратор, C# \n, Closure, Python, JavaScript, программирование, как научиться программировать, Возвращаемое значение, Java, Область видимости, метанит, статьи, Однострочные и локальные функции, Аргументы, Swift, Kotlin, progvibe.ru, прогвайб, habr, Nested function, обучение, обучающие статьи по программированию, C++",
    "description": "",
    "name": "inline_local_func"
  },
  {
    "id": 314,
    "title": "Перегрузка функций",
    "url": "/tutorials/kotlin/general/function_overloading",
    "chapter": 3,
    "keywords": " расширяемость, Функция,  ошибки  компиляции, progvibe, типы данных, объектно-ориентированное программирование,  контекст,  неявно, хабр,  гибкость,  документация. \n, metanit,  разрешение  перегрузки,  явный  вызов, полиморфизм,  читаемость  кода,  методы, перегрузка операторов, статическая типизация, Перегрузка функций, Python,  компиляция, перегрузка, возвращаемое значение, JavaScript, программирование, как научиться программировать, Java, компилятор, метанит, статьи,  перегрузка  конструктора, сигнатура,  удобство  использования, progvibe.ru, прогвайб, habr, параметры, обучение, обучающие статьи по программированию, аргументы, C++,  соглашения  о  названии,  ООП",
    "description": "",
    "name": "function_overloading"
  },
  {
    "id": 315,
    "title": "Тип функции",
    "url": "/tutorials/kotlin/general/function_types",
    "chapter": 3,
    "keywords": "область видимости, Функция, progvibe, объектно-ориентированное программирование, императивный стиль, хабр, пространство имен, отладка, тип функции, metanit, инкапсуляция, производительность, оптимизация, полиморфизм, побочные эффекты, замыкания, лямбда-выражения, чистые функции, декларативный стиль, функциональное программирование, пользовательские функции, абстракция, встроенные функции, процедурное программирование, модульность, тестирование. \n, программирование, повторное использование кода, как научиться программировать, сигнатура функции, рекурсия, метанит, статьи, анонимные функции, прогвайб, progvibe.ru, habr, перегрузка функций, параметры, Тип функции, возврат значения, обучение, обучающие статьи по программированию, библиотеки функций, аргументы",
    "description": "",
    "name": "function_types"
  },
  {
    "id": 316,
    "title": "Функции высокого порядка",
    "url": "/tutorials/kotlin/general/higher_order_func",
    "chapter": 3,
    "keywords": " Ruby, высшего,  JavaScript,  разработчик, progvibe, функциональное, функций,  программист,  разработки,  Go, filter, хабр,  упрощение, декораторы, metanit, порядка, map, составление, lambda, читаемости,  Java,  Swift,  Haskell, эффекты, абстракция, Python,  софт,  Lisp, повторное, reduce, программирование,  Kotlin, как научиться программировать, декларативное, рекурсия, метанит, статьи,  Scala, closure, Функции, кода,  код, прогвайб, progvibe.ru, habr, Функции высокого порядка,  улучшение, анонимные, функции, callback, чистые, побочные, использование, обучение, обучающие статьи по программированию, императивное,  программирование. \n,  C++,  Clojure",
    "description": "",
    "name": "higher_order_func"
  },
  {
    "id": 317,
    "title": "Анонимные функции и лямбда-выражения",
    "url": "/tutorials/kotlin/general/lambdas",
    "chapter": 3,
    "keywords": "progvibe,  анонимный код, хабр, metanit,  lambda expressions,  замыкание, Анонимные функции,  лямбда-исчисление, higher-order functions,  повышение производительности, anonymous functions,  императивный стиль,  функциональный стиль, closures, functional programming paradigm, лямбда-выражения, imperative programming, функциональное программирование, declarative programming, Python,  краткость кода, Анонимные функции и лямбда-выражения, JavaScript, Clojure, программирование, как научиться программировать, code clarity, Java, метанит, статьи, Haskell, performance improvement. \n, Kotlin, Swift,  простота кода, progvibe.ru, прогвайб, callbacks, habr,  улучшение читаемости, code brevity, обучение,  функции высшего порядка, обучающие статьи по программированию, C++, lambda calculus,  декларативный стиль,  callback функции",
    "description": "",
    "name": "lambdas"
  },
  {
    "id": 318,
    "title": "Замыкания",
    "url": "/tutorials/kotlin/general/closures",
    "chapter": 3,
    "keywords": "область видимости, functional programming, progvibe, внутренняя функция, function hoisting, значение, замыкающие объекты, замыкание, асинхронное программирование, bind, Ruby, переменная, \n, переменная-замыкание, хабр, lexical scope, environment, время жизни, memory management, metanit, колбэки, asynchronous programming, функция, лексическая среда, higher-order functions, context, anonymous functions, closures, currying, Python, apply, Замыкания, JavaScript, lambda functions, программирование, как научиться программировать, рекурсия, метанит, статьи, сохранение контекста, анонимные функции, this, C#, immutability, прогвайб, partial application, ссылка, call, callbacks, progvibe.ru, state management, habr, внешняя функция, обучение, обучающие статьи по программированию, nested functions, функции высшего порядка, call stack, контекст выполнения",
    "description": "",
    "name": "closures"
  },
  {
    "id": 319,
    "title": "Классы и объекты",
    "url": "/tutorials/kotlin/general/classes_objects",
    "chapter": 4,
    "keywords": "progvibe, проектирование, шаблон, чертеж, объектно-ориентированное программирование, Ruby, переменная, хабр, принципы, экземпляр, ООП, TypeScript, metanit, функция, конструктор, Классы и объекты, инкапсуляция, структура данных, состояние, разработка, Класс, полиморфизм, поведение, тип данных, наследование, абстракция, Python, методы, парадигмы. \n, JavaScript, программирование, кодирование, как научиться программировать, концепции, Java, метанит, статьи, атрибуты, алгоритмы, модель, C#, PHP, объект, Swift, Kotlin, структуры, progvibe.ru, прогвайб, habr, деструктор, обучение, обучающие статьи по программированию, C++",
    "description": "",
    "name": "classes_objects"
  },
  {
    "id": 320,
    "title": "Модификаторы доступа",
    "url": "/tutorials/kotlin/general/access_modifiers",
    "chapter": 4,
    "keywords": "progvibe, Software Engineering \n, Protected, Модификатор доступа, Объект, Code Reusability, Internal, хабр, Полиморфизм, ООП, Доступ, Интерфейс, metanit, Класс, Модификаторы доступа, Encapsulation, Visibility, Скрытие информации, Access Control, Python, Объектно-ориентированное программирование, Data Hiding, JavaScript, программирование, Метод, как научиться программировать, Java, метанит, Design Patterns, статьи, Security, Свойство, Private, Best Practices, Наследование, Абстракция, Public, C#, OOP Principles, прогвайб, progvibe.ru, habr, Code Optimization, обучение, обучающие статьи по программированию, Инкапсуляция, C++",
    "description": "",
    "name": "access_modifiers"
  },
  {
    "id": 321,
    "title": "Пакеты и импорт",
    "url": "/tutorials/kotlin/general/packages_imports",
    "chapter": 4,
    "keywords": "package.json, структурирование кода,  dependency resolution, progvibe, dependency management, Пакеты, хабр, столкновение имен, библиотеки, управление версиями, импорт, пространство имен, конфликты зависимостей, yarn, metanit, организация кода,  relative imports, pip, версия, импорт модулей, poetry,  __init__.py, управление зависимостями, npm, импорт пакетов, import statement, программирование, как научиться программировать, Пакеты и импорт, повторное использование кода,  absolute imports, метанит, статьи, зависимость проекта, setuptools, прогвайб, progvibe.ru, habr,  dependency injection, зависимость, requirements.txt, обучение, обучающие статьи по программированию,  virtual environment, модули,  namespace packages,  dependency inversion\n, зависимости",
    "description": "",
    "name": "packages_imports"
  },
  {
    "id": 322,
    "title": "Наследование",
    "url": "/tutorials/kotlin/general/inheritance",
    "chapter": 4,
    "keywords": "иерархия, метод, progvibe, диаграмма классов, объектно-ориентированное программирование, хабр, родительский класс, базовый класс, UML, ООП, metanit, подкласс, конструктор, суперкласс, полиморфизм, статический метод, множественное наследование, объекты, свойство, абстракция, Python, классы, переопределение, перегрузка, программирование, как научиться программировать, интерфейс, Java, метанит, абстрактный класс, статьи, Наследование, C#, прогвайб, progvibe.ru, habr, деструктор, JavaScript. \n, обучение, производный класс, реализация, обучающие статьи по программированию, абстрактный метод, интерфейсное наследование, C++, виртуальный метод, дочерний класс",
    "description": "",
    "name": "inheritance"
  },
  {
    "id": 323,
    "title": "Переопределение методов и свойств",
    "url": "/tutorials/kotlin/general/overriding",
    "chapter": 4,
    "keywords": " динамическое связывание,  динамическая типизация, progvibe, объектно-ориентированное программирование,  статическое связывание,  хорошие практики, хабр, ООП, интерфейсы, metanit, свойства,  переопределение методов,  реализация, виртуальные методы, полиморфизм, позднее связывание, статическая типизация, наследование, объекты, Python, абстракция,  классы, методы, переопределение, перегрузка,  инкапсуляция, JavaScript,  дочерние классы,  производный класс, программирование, абстрактные методы,  переопределение свойств, как научиться программировать, Java,  интерфейсы, метанит, статьи, Переопределение методов и свойств,  абстрактные классы, C#, PHP,  родительские классы, прогвайб, progvibe.ru, habr,  улучшение кода,  раннее связывание, обучение,  базовый класс, обучающие статьи по программированию, Переопределение,  упрощение разработки. \n,  ошибки при переопределении",
    "description": "",
    "name": "overriding"
  },
  {
    "id": 324,
    "title": "Геттеры и сеттеры",
    "url": "/tutorials/kotlin/general/getters_setters",
    "chapter": 4,
    "keywords": " object-oriented programming, design patterns, progvibe, сеттеры, readability, mutator, объектно-ориентированное программирование, хабр, ООП, metanit, Геттеры и сеттеры, свойства, behavior, инкапсуляция, property, setter,  защита данных, data hiding, объекты, method, best practices. \n, Python, публичные методы, методы, классы, accessor, JavaScript, программирование, code reusability, как научиться программировать, instance, software development, Java, метанит, статьи, encapsulate, abstraction, maintainability, Геттеры, encapsulation principle, class, прогвайб, information hiding, progvibe.ru, getter, приватные поля, habr, attribute, обучение, обучающие статьи по программированию, C++, доступ к данным",
    "description": "",
    "name": "getters_setters"
  },
  {
    "id": 325,
    "title": "Абстрактные классы и методы",
    "url": "/tutorials/kotlin/general/abstract_classes",
    "chapter": 4,
    "keywords": "progvibe,  принцип SOLID,  виртуальный метод,  расширение, хабр,  неполная реализация,  создание,  шаблон проектирования, metanit,  структурирование кода,  дочерний класс, полиморфизм,  объект,  неполный класс,  родительский класс,  методы,  принцип открытости/закрытости. \n,  конструктор, наследование,  повторное использование кода, абстракция,  свойства,  инкапсуляция, программирование, как научиться программировать, интерфейс,  метод, метанит, абстрактный класс, статьи,  конкретный метод,  упрощение разработки, Абстрактные классы и методы,  переопределение, прогвайб, progvibe.ru, habr,  улучшение читаемости, обучение,  базовый класс, реализация, обучающие статьи по программированию, абстрактный метод",
    "description": "",
    "name": "abstract_classes"
  },
  {
    "id": 326,
    "title": "Интерфейсы",
    "url": "/tutorials/kotlin/general/interfaces",
    "chapter": 4,
    "keywords": " интерактивность,  тестирование, progvibe,  UI, хабр,  визуальный дизайн,  мобильный дизайн. \n,  прототипирование,  информационная архитектура, Интерфейс,  метрики, metanit,  структура,  аналитика,  отзывчивость,  дизайн интерфейсов,  концепция,  пользовательский интерфейс,  API,  доступность,  программирование интерфейсов, программирование, как научиться программировать,  веб-интерфейс, метанит, статьи,  стиль,  навигация,  эффективность, прогвайб, progvibe.ru,  разработка интерфейсов,  эргономика,  адаптивный дизайн, habr,  юзабилити,  GUI, Интерфейсы, обучение, обучающие статьи по программированию,  UX,  графический интерфейс,  инклюзивность",
    "description": "",
    "name": "interfaces"
  },
  {
    "id": 327,
    "title": "Вложенные и внутренние классы и интерфейсы",
    "url": "/tutorials/kotlin/general/nested_classes",
    "chapter": 4,
    "keywords": " разработка программного обеспечения, progvibe,  внешние классы,  паттерны проектирования,  полиморфизм, нестатические классы,  разработка, хабр,  объявление, Вложенные и внутренние классы и интерфейсы, интерфейсы, Вложенные классы,  доступ к данным,  рефакторинг, metanit,  статические классы,  структурирование кода,  приватные классы,  модульность,  наследование, внутренние классы,  оптимизация кода,  повторное использование кода,  код-стиль,  инкапсуляция, программирование,  использование, как научиться программировать, Java, метанит, статьи, C#, прогвайб, progvibe.ru,  программирование, habr,  абстракция,  создание экземпляра, обучение, обучающие статьи по программированию, C++,  публичные классы,  объектно-ориентированное программирование. \n,  инициализация",
    "description": "",
    "name": "nested_classes"
  },
  {
    "id": 328,
    "title": "Data-классы",
    "url": "/tutorials/kotlin/general/data_classes",
    "chapter": 4,
    "keywords": "design patterns, progvibe, object-oriented programming, hashCode, Android, immutable objects, хабр, metanit, POJO, getters, efficiency, data structures, code readability, libraries, value objects, data persistence, best practices, DTO, equals, domain modeling, toString, программирование, как научиться программировать, software development, Java, метанит, deserialization, статьи, JSON, Data-классы, web development \n, Kotlin, immutability, progvibe.ru, serialization, прогвайб, habr, data transfer objects, setters, frameworks, XML, обучение, обучающие статьи по программированию, data modeling, iOS, code maintainability, database",
    "description": "",
    "name": "data_classes"
  },
  {
    "id": 329,
    "title": "Перечисления enums",
    "url": "/tutorials/kotlin/general/enums",
    "chapter": 4,
    "keywords": " ошибки, progvibe, константы, типы данных,  значения,  читаемость, хабр,  примеры, TypeScript, metanit,  namespace,  безопасность, разработка,  валидация,  enum class,  const, код,  методы,  применение, Python,  свойства, JavaScript, программирование,  удобство,  использование, как научиться программировать,  итерация,  преимущества, Java,  индексация, метанит, статьи,  final,  switch-case, конфигурация, progvibe.ru, прогвайб, habr, Перечисления enums,  обработка. \n,  недостатки, обучение, Перечисления, обучающие статьи по программированию,  альтернативы,  C#, enums,  инициализация",
    "description": "",
    "name": "enums"
  },
  {
    "id": 330,
    "title": "Делегирование",
    "url": "/tutorials/kotlin/general/delegation",
    "chapter": 4,
    "keywords": "progvibe, делегирование в разработке, делегирование полномочий, доверие,  улучшение. \n, хабр, автономия,  контроль,  постановка задач, лидерство, metanit, команда, продуктивность, управление проектами, делегирование в IT,  планирование, управление временем, оптимизация, развитие, задачи,  коммуникация, мотивация, гибкие методологии, полномочия, Делегирование, workflow, приоритезация,  анализ, навыки, программирование, как научиться программировать, метанит, статьи, ответственность, делегирование задач, делегирование в команде, Scrum,  отчетность,  feedback, менеджмент,  outsourcing, прогвайб, progvibe.ru,  процессы, управление ресурсами, habr, эффективность, обучение, обучающие статьи по программированию,  целеполагание, Agile, делегирование ответственности",
    "description": "",
    "name": "delegation"
  },
  {
    "id": 331,
    "title": "Анонимные классы и объекты",
    "url": "/tutorials/kotlin/general/anonymous_classes",
    "chapter": 4,
    "keywords": "anonymous methods, progvibe, scope, объектно-ориентированное программирование, анонимные объекты, хабр, Анонимные классы и объекты, переменные, локальные классы, ООП, интерфейсы, внешние классы, контекст, Анонимные классы, anonymous inner objects, преимущества, metanit, anonymous inner classes, инкапсуляция, примеры, конструкторы, применение, anonymous functions, полиморфизм, closures, лямбда-выражения, недостатки, код, внутренние классы, best practices, наследование, синтаксис, функциональное программирование, best practices. \n, Python, методы, ограничения, JavaScript, программирование, абстрактные классы, как научиться программировать, Java, метанит, статьи, C#, PHP, Kotlin, Swift, progvibe.ru, прогвайб, habr, обучение, использование, обучающие статьи по программированию, C++",
    "description": "",
    "name": "anonymous_classes"
  },
  {
    "id": 332,
    "title": "Companion-объекты",
    "url": "/tutorials/kotlin/general/companion_objects",
    "chapter": 4,
    "keywords": "Scala, singleton, progvibe, функциональность, объект-компаньон, public, расширение, хабр, паттерн проектирования,  примеры,  разработка. \n, контекст, metanit, статическая инициализация, private, доступ,  зависимости, статический метод, companion object, Companion-объекты,  применение, программирование,  использование, как научиться программировать, статический класс, Java,  преимущества, метанит, статьи,  практика, Kotlin, прогвайб, progvibe.ru, habr,  недостатки, обучение, обучающие статьи по программированию, создание объекта, объект-спутник,  альтернативы, Сопровождающий объект,  методы-расширения",
    "description": "",
    "name": "companion_objects"
  },
  {
    "id": 333,
    "title": "Обобщенные классы и функции",
    "url": "/tutorials/kotlin/general/generic_classes_func",
    "chapter": 5,
    "keywords": "progvibe, типы параметров, генерики, списки, массивы, словарь, хабр, переиспользование кода, ошибка времени компиляции, ошибка времени выполнения, инвариантность, metanit, динамическая типизация, читаемость кода, map, производительность, разработка, полиморфизм,  вариантность, специализация, безопасность типов, шаблоны, Обобщенные классы и функции, тип данных, статическая типизация, контравариантность, Python, объектно-ориентированное программирование. \n, перегрузка, Обобщенные классы, программирование, как научиться программировать,  коллекции, Java, компилятор, ковариантность, параметризованные типы, метанит, статьи, обобщенные функции, C#, прогвайб, progvibe.ru,  программирование, habr, обучение, обучающие статьи по программированию, C++, ограничение типов",
    "description": "",
    "name": "generic_classes_func"
  },
  {
    "id": 334,
    "title": "Ограничения обобщений",
    "url": "/tutorials/kotlin/general/generic_constraints",
    "chapter": 5,
    "keywords": " тестирование, ограничения обобщений, progvibe,  система классификации, детализация, исключения, нюансы,  разработка, хабр, конкретизация,  алгоритмы,  моделирование, контекст, metanit, неточность, обобщения, специфичность,  глубокое обучение. \n, ошибки,  программное обеспечение,  отладка, детали,  неправильное применение,  анализ данных, абстракция, риски,  машинное обучение,  кластерный анализ, ограничения, неверные предположения, программирование, как научиться программировать, метанит, статьи,  ошибки программирования,  искусственный интеллект, Ограничения обобщений, прогвайб, progvibe.ru, habr,  неадекватность, обучение, обучающие статьи по программированию, вариативность",
    "description": "",
    "name": "generic_constraints"
  },
  {
    "id": 335,
    "title": "Вариантность, ковариантность и контравариантность",
    "url": "/tutorials/kotlin/general/variance",
    "chapter": 5,
    "keywords": "языки программирования, метод, Scala, семантика, безопасность типов \n, progvibe, типы данных, возвратное значение, объектно-ориентированное программирование, типизация, параметр, хабр, Rust, инвариантность, TypeScript, metanit, обобщенное программирование, тип, супертип, динамическая типизация, производительность, аргумент, полиморфизм, подтип, типы значений, ошибки времени выполнения, Вариантность, статическая типизация, наследование, синтаксис, контравариантность, функциональное программирование, Python, суперабобщение, Вариантность, ковариантность и контравариантность, JavaScript, ошибки времени компиляции, программирование, как научиться программировать, интерфейс, ковариантность, Java, компилятор, метанит, статьи, субтипизация, совместимость типов, C#, Kotlin, Swift, интерпретатор, оптимизация кода, progvibe.ru, прогвайб, habr, обучение, обучающие статьи по программированию, C++",
    "description": "",
    "name": "variance"
  },
  {
    "id": 336,
    "title": "Обработка исключений",
    "url": "/tutorials/kotlin/general/exceptions",
    "chapter": 6,
    "keywords": "дизайн приложения, исключение NullPointerException, паттерны проектирования, progvibe, стабильность, хабр, исключение ArithmeticException, Обработка исключений, лучшие практики, тестирование, архитектурные шаблоны, отладка, throws, metanit, перехват исключений, обработка исключений, Исключения, обработка исключений в C++, throw, принципы обработки исключений, надежность, производительность, поток выполнения, стек вызовов, ошибка, управление, исключение, finally, обработка исключений в Python, обработка исключений в Java, отлов исключений, освобождение ресурсов. \n, программирование, как научиться программировать, обработка ошибок в мобильных приложениях, исключение вне контекста, метанит, статьи, обработка ошибок, обработка ошибок в веб-приложениях, try-catch, механизмы обработки исключений, обработчик исключений, безопасность, прогвайб, progvibe.ru, обработка, управление ресурсами, архитектура приложения, habr, исключительная ситуация, исключение IOException, исключение в контексте, обучение, обучающие статьи по программированию",
    "description": "",
    "name": "exceptions"
  },
  {
    "id": 337,
    "title": "Null и nullable-типы",
    "url": "/tutorials/kotlin/general/nullability",
    "chapter": 6,
    "keywords": " Ruby,  JavaScript, null,  неинициализированная переменная, progvibe,  неявное присваивание null,  Python,  Rust. \n,  Go, хабр,  безопасность типов,  неявные аннотации,  ошибки при разработке, metanit,  баги,  динамические языки программирования,  явное присваивание null,  неявное приведение типов,  статические языки программирования, Null и nullable-типы,  валидация,  исключение NullPointerException,  Java,  Swift,  проверка на null,  сборщик мусора,  безопасность данных,  платформа .NET,  управление памятью,  обработка ошибок, программирование, как научиться программировать,  отсутствие значения,  пустая ссылка, метанит, статьи,  явные аннотации, прогвайб, progvibe.ru, habr,  дефекты,  явное приведение типов,  PHP, обучение, обучающие статьи по программированию, nullable-типы,  C#,  TypeScript,  Kotlin",
    "description": "",
    "name": "nullability"
  },
  {
    "id": 338,
    "title": "Преобразование типов",
    "url": "/tutorials/kotlin/general/type_casting",
    "chapter": 6,
    "keywords": "casting, progvibe, потеря данных, generic, ошибка компиляции, ошибка выполнения, хабр, интерпретатор. \n, string, metanit, динамическая типизация, класс, оператор приведения, boolean, полиморфизм, type casting, язык программирования, сужающее преобразование, безопасность типов, boxing, тип данных, статическая типизация, преобразование типов, наследование, Python, расширяющее преобразование, integer, JavaScript, программирование, как научиться программировать, интерфейс, Java, компилятор, абстрактный класс, метанит, статьи, проверка типов, дженерик, C#, приведение типов, объект, неявное преобразование, progvibe.ru, прогвайб, habr, явное преобразование, преобразование из типа, обучение, обучающие статьи по программированию, преобразование к типу, .NET, Преобразование типов, C++, float, unboxing",
    "description": "",
    "name": "type_casting"
  },
  {
    "id": 339,
    "title": "Функции расширения",
    "url": "/tutorials/kotlin/general/extension_functions",
    "chapter": 6,
    "keywords": "использование в LINQ, использование в Unit-тестировании, progvibe, использование в интерфейсах, использование в анонимных методах, добавление методов, хабр, использование в лямбда-выражениях, советы по оптимизации, недостатки расширений, metanit, использование в фреймворках, использование в проектах, преимущества расширений, использование в структурах, best practices, использование в делегатах, Python, доступ к членам, типичные ошибки, JavaScript, программирование, как научиться программировать, расширяющие методы, Java, доступ к приватным членам, Функции расширения, синтаксис расширений, использование в классах, использование в перечислениях, использование в библиотеках, метанит, статьи, C#, использование в реальных проектах, рекомендации по использованию, Kotlin, Swift, progvibe.ru, прогвайб, habr, расширение функциональности, обучение, обучающие статьи по программированию, .NET, статические методы, сравнение с другими подходами. \n, использование расширений, практическое применение, примеры кода",
    "description": "",
    "name": "extension_functions"
  },
  {
    "id": 340,
    "title": "Перегрузка операторов",
    "url": "/tutorials/kotlin/general/operator_overloading",
    "chapter": 6,
    "keywords": "семантика,  компилятор, progvibe,  перегрузка оператора <<,  ошибки перегрузки, хабр,  примеры кода,  перегрузка оператора <=,  определение оператора,  перегрузка оператора ==, metanit,  упрощение кода,  применение перегрузки, перегрузка оператора %, перегрузка оператора *, полиморфизм, Перегрузка операторов, синтаксис,  перегрузка оператора >>, Python,  перегрузка оператора +, операторная перегрузка, программирование, как научиться программировать,  перегрузка оператора &, Java, метанит, статьи,  перегрузка оператора >,  перегрузка оператора [],  рекомендации по перегрузке,  перегрузка оператора >=,  перегрузка оператора (), progvibe.ru, прогвайб,  интерпретатор, habr, унарные операторы, перегрузка оператора |,  улучшение читаемости,  перегрузка оператора /,  создание собственных типов данных. \n, обучение, обучающие статьи по программированию, C++,  перегрузка оператора =,  перегрузка оператора !=,  перегрузка оператора ^,  бинарные операторы, перегрузка оператора -,  перегрузка оператора <, операторы",
    "description": "",
    "name": "operator_overloading"
  },
  {
    "id": 341,
    "title": "Делегированные свойства",
    "url": "/tutorials/kotlin/general/delegated_properties",
    "chapter": 6,
    "keywords": " паттерн проектирования, progvibe,  полиморфизм,  clean code,  Proxy, хабр,  перегрузка, ООП,  доступ к данным, metanit,  поля,  best practices,  реализация,  design patterns. \n,  наследование,  управление доступом,  Decorator, Делегированные свойства,  методы,  refactoring, Python,  инкапсуляция, программирование, как научиться программировать, Java,  интерфейсы, метанит,  code optimization, статьи,  SOLID, C#,  переопределение, прогвайб, progvibe.ru,  программирование, habr,  абстракция, делегирование, обучение, Свойства, .NET,  DRY, обучающие статьи по программированию",
    "description": "",
    "name": "delegated_properties"
  },
  {
    "id": 342,
    "title": "Scope-функции",
    "url": "/tutorials/kotlin/general/scope_functions",
    "chapter": 6,
    "keywords": "расширяющие функции, progvibe, also, fluent API, объектно-ориентированное программирование, Android, хабр, контекст, fluent interface, DRY, metanit, run, мобильная разработка, takeIf, оптимизация, асинхронное программирование \n, читаемость, takeUnless, best practices, веб-разработка, лямбда-выражение, код, рефакторинг, with, функциональное программирование, apply, возвращаемое значение, снижение сложности, программирование, как научиться программировать, Java, метанит, статьи, обработка ошибок, this, Kotlin Coroutines, безопасность, Kotlin, прогвайб, progvibe.ru, habr, серверная разработка, let, обучение, обучающие статьи по программированию, Scope-функции",
    "description": "",
    "name": "scope_functions"
  },
  {
    "id": 343,
    "title": "Инфиксная нотация",
    "url": "/tutorials/kotlin/general/infix_notation",
    "chapter": 6,
    "keywords": "приоритет операций, progvibe, алгоритм, арифметика, скобки, префиксная нотация, алгебраические выражения, сложность, хабр, дерево разбора, постфиксная нотация, metanit, обратная польская нотация, преимущества, операнды, очередь, вычисление, примеры, применение, Инфиксная нотация, логические операции, преобразование, парсер, программирование, как научиться программировать, рекурсия, недостатки. \n, компилятор, метанит, статьи, математические выражения, интерпретатор, стек, progvibe.ru, прогвайб, habr, эффективность, обучение, обучающие статьи по программированию, операторы",
    "description": "",
    "name": "infix_notation"
  },
  {
    "id": 344,
    "title": "List",
    "url": "/tutorials/kotlin/general/lists",
    "chapter": 7,
    "keywords": "указатель, progvibe, абстрактный тип данных, хвост, память, голова, хабр, циклический список, поиск, metanit, узел, очередь, пустой список, структура данных, алгоритмы обработки списков, оптимизация, операции над списком, итерация, односвязный список, время выполнения, ADT, Python, вставка, JavaScript, программирование, как научиться программировать, рекурсия, двусвязный список, Java, сортировка, метанит, C#. \n, индексация, хранилище, статьи, алгоритмы поиска, стек, добавление, сложность алгоритма, значение узла, дек, progvibe.ru, прогвайб, эффективность, habr, List, обучение, обучающие статьи по программированию, Список, C++, алгоритмы сортировки, размер, удаление, линейный список",
    "description": "",
    "name": "lists"
  },
  {
    "id": 345,
    "title": "Set",
    "url": "/tutorials/kotlin/general/sets",
    "chapter": 7,
    "keywords": "щность множества, кольцо, решение, биекция, metanit, композиция, частичный порядок, статьи, пустое множество, определитель, универсальное множество, обучение, элемент, базис, матрица, непрерывное множество, алгебраическая структура, обратное отношение, векторное пространство, скалярное произведение, habr, линейное уравнение, конечное множество, Множество, вектор, векторное произведение. \n, отношение, инъекция, дополнение, разность, тотальный порядок, объединение, линейная независимость, обучающие статьи по программированию, хабр, progvibe.ru, прогвайб, размерность, подмножество, система уравнений, пересечение, поле, метанит, Set, как научиться программировать, progvibe, функция, бесконечное множество, сюръекция, программирование, эквивалентность, группа, дискретное множество",
    "description": "",
    "name": "sets"
  },
  {
    "id": 346,
    "title": "Map",
    "url": "/tutorials/kotlin/general/maps",
    "chapter": 7,
    "keywords": "стительность, анализ, картографические проекции, геодезия, metanit, разрешение, пространственная информация, система координат, статьи, географические данные, растровые данные, атлас, карта, рельеф, геометрия, картографирование, обучение, дороги, населенные пункты, инфраструктура, habr, масштаб, координаты, управление, картография, обучающие статьи по программированию, визуализация, широта, геолокация, хабр, progvibe.ru, ГИС, прогвайб, точность, планирование, геопространственные данные, метанит, картографический сервис, Map, гидрография, как научиться программировать, топография, progvibe, мобильные карты. \n, программирование, навигация, геоинформационные системы, web-карты, векторные данные, долгота",
    "description": "",
    "name": "maps"
  },
  {
    "id": 347,
    "title": "Отличие последовательности от коллекций Iterable",
    "url": "/tutorials/kotlin/general/iterable_vs_collections",
    "chapter": 7,
    "keywords": "inkedHashMap,  HashMap,  производительность,  ArrayDeque,  Deque, metanit,  Stream, Java,  foreach,  последовательность, статьи,  TreeSet,  ArrayList,  PriorityQueue,  многопоточность, обучение,  реализация,  цикл, habr,  сбор мусора,  мутабельность,  HashSet,  выделение памяти,  List,  итерация, обучающие статьи по программированию,  LinkedList, хабр, progvibe.ru, прогвайб,  Set,  интерфейс, Отличие последовательности от коллекций Iterable,  преимущества,  Map,  lazy evaluation,  неизменяемость, метанит,  Iterable,  iterator, как научиться программировать, progvibe,  недостатки. \n,  TreeMap, программирование,  коллекция,  размер,  функциональный стиль,  Queue,  параллелизм",
    "description": "",
    "name": "iterable_vs_collections"
  },
  {
    "id": 348,
    "title": "Основные операции над коллекциями",
    "url": "/tutorials/kotlin/general/collection_operations",
    "chapter": 7,
    "keywords": "ступ к элементам, словари, длина коллекции, фильтрация, metanit, добавление элементов,  проверка наличия элемента,  программирование, статьи, коллекции, операции над элементами,  алгоритмы, обучение, итерация, habr, заполнение коллекции,  c++. \n, поиск элементов, множества,  реализация коллекций, обучающие статьи по программированию,  срез, хабр, progvibe.ru, операции с элементами, прогвайб,  java, ключи,  структуры данных, метанит, Основные операции над коллекциями, изменение элементов, индексация,  применение коллекций, как научиться программировать, progvibe, пустая коллекция, конкатенация,  удобство, программирование,  динамический размер,  python, списки, удаление элементов, значения, сортировка,  языки программирования,  эффективность,  статический размер, массивы",
    "description": "",
    "name": "collection_operations"
  },
  {
    "id": 349,
    "title": "Введение в корутины. Область видимости корутины",
    "url": "/tutorials/kotlin/general/coroutines_intro",
    "chapter": 8,
    "keywords": "нтекстный переход, asyncio, generator, метод, обработка исключений, асинхронное программирование, планировщик, Корутины, metanit,  контекст менеджер \n, область видимости, статьи, неблокирующий, обучение, async,  ошибки, отзывчивый интерфейс, возобновление, habr,  управление ресурсами, awaitable, задачи, обучающие статьи по программированию, coroutine, блокировка, хабр, progvibe.ru, отзывчивость, прогвайб,  декораторы, производительность, ожидание, yield, метанит, исключения, Введение в корутины. Область видимости корутины, как научиться программировать, progvibe, функция, сопрограммы, состояние, приостановка, конкурентное программирование, многопоточность, await, переменные,  паттерны проектирования, программирование, параллельное программирование",
    "description": "",
    "name": "coroutines_intro"
  },
  {
    "id": 350,
    "title": "launch и Job",
    "url": "/tutorials/kotlin/general/launch_job",
    "chapter": 8,
    "keywords": "нкуренция, анализ, тенденции, технологии, работа, metanit, launch и Job, проблемы, статьи, развитие, потребитель, автоматизация, рост, маркетинг, обучение, оценка, адаптация, habr, трудоустройство, рынок, стратегия, обратная связь, изменения, будущее, запуск, управление, инновации, решения, обучающие статьи по программированию, результат, предпринимательство, риски, команда, бизнес, угрозы, вызовы, хабр, progvibe.ru, прогвайб, масштабирование, исследования, инвестиции, планирование, оптимизация, перспективы \n, финансирование, метанит, карьера, продукт, лидерство, как научиться программировать, progvibe, успех, трансформация, стартап, программирование, исполнение",
    "description": "",
    "name": "launch_job"
  },
  {
    "id": 351,
    "title": "Async, await и Deferred",
    "url": "/tutorials/kotlin/general/async_await",
    "chapter": 8,
    "keywords": ",  производительность,  Node.js,  задержка, metanit, Java, Асинхронное программирование, Deferred, статьи, асинхронные операции, RxJS, Promise, Python, блокирующий код, обучение,  timeout, коллбэки, event loop,  PHP, JavaScript, habr,  Observable,  реактивное программирование,  обработка ошибок, Async, await и Deferred, concurrency,  отмена операции, обучающие статьи по программированию, async/await, хабр, Future, progvibe.ru,  память, прогвайб, неблокирующий код,  использование ресурсов. \n,  масштабируемость, yield, метанит,  Kotlin, coroutines, генераторы, как научиться программировать, progvibe,  синхронный код, сопрограммы, программирование, await, многопоточность,  побочные эффекты,  Swift",
    "description": "",
    "name": "async_await"
  },
  {
    "id": 352,
    "title": "Диспетчер корутины",
    "url": "/tutorials/kotlin/general/coroutine_dispatch",
    "chapter": 8,
    "keywords": "налы, асинхронный ввод-вывод, asyncio, алгоритм планирования, асинхронное программирование, metanit, контекстный переключатель, статьи, Boost.Coroutine, конкурентность, стековая машина, неблокирующий ввод-вывод, запуск корутины, Python, обучение, Диспетчер корутины, многозадачность, мьютекс, habr, preemptive multitasking, семафор, состояние корутины, планировщик корутин, синхронизация, эффективность использования ресурсов \n, корутины, обучающие статьи по программированию, эффективность, блокировка, C++, async/await, очередь задач, хабр, progvibe.ru, прогвайб, диспетчер корутин, производительность, событийно-ориентированное программирование, планирование, yield, метанит, как научиться программировать, progvibe, параллелизм, Go, cooperative multitasking, сопрограммы, приостановка корутины, управление ресурсами, программирование, возобновление корутины, yield from",
    "description": "",
    "name": "coroutine_dispatch"
  },
  {
    "id": 353,
    "title": "Отмена выполнения корутин",
    "url": "/tutorials/kotlin/general/coroutine_cancel",
    "chapter": 8,
    "keywords": "локировка, asyncio,  паттерны, контекст менеджер, metanit,  future, статьи, отмена,  cleanup,  signal, threading, обучение,  timeout,  task,  ресурсы, habr, выполнение, with, задачи, CancellationError,  обработка ошибок, корутины, обучающие статьи по программированию,  await, async/await, хабр, progvibe.ru, прогвайб,  run_until_complete,  graceful shutdown,  best practices, async with,  синхронизация, метанит,  interrupt, исключения, Отмена выполнения корутин, как научиться программировать, progvibe,  concurrency, приостановка, программирование,  gather,  производительность \n, CancelledError,  эффективность,  параллелизм",
    "description": "",
    "name": "coroutine_cancel"
  },
  {
    "id": 354,
    "title": "Каналы",
    "url": "/tutorials/kotlin/general/channels",
    "chapter": 8,
    "keywords": "росительный канал, каналы,  транспортный канал,  радиоканал,  водоток, metanit,  судоходный канал, статьи,  блог,  телевизионный канал, обучение,  контент-маркетинг,  оптовая торговля,  канал продаж, habr,  канал сбыта,  поток информации, искусственный канал, канал,  прямые продажи,  канал распространения, русло, ручьи,  канал связи. \n, обучающие статьи по программированию,  розничная торговля, хабр,  сайт, progvibe.ru, прогвайб, река,  рекламный канал,  сетевой маркетинг,  медиаканал,  дистрибьюторский канал,  социальные сети,  видеоканал, метанит,  канал коммуникации,  информационный канал, как научиться программировать, progvibe, Каналы,  маркетинговый канал,  канал связи,  электронная коммерция, программирование",
    "description": "",
    "name": "channels"
  },
  {
    "id": 355,
    "title": "Создание асинхронных потоков и операции с ним",
    "url": "/tutorials/kotlin/general/flow_creation",
    "chapter": 9,
    "keywords": ", семафоры, metanit, Java, блокировка потоков, статьи, блокировки, Асинхронный поток, асинхронные операции, future, Python, обещания, обучение, habr, задачи, мьютексы, синхронизация, условия, Создание асинхронных потоков и операции с ним, масштабируемость, ресурсы, обучающие статьи по программированию, время отклика, планировщик задач, async/await, очередь задач, отзывчивость, хабр, progvibe.ru, прогвайб, производительность, ожидание событий, оптимизация, событийно-ориентированное программирование, обработка ошибок, метанит, JavaScript. \n, исключения, как научиться программировать, progvibe, параллелизм, создание потоков, управление потоками, программирование, конкурентное программирование, многопоточность, управление ресурсами, callback-функции, обработка задач",
    "description": "",
    "name": "flow_creation"
  },
  {
    "id": 356,
    "title": "Функции count, take и drop",
    "url": "/tutorials/kotlin/general/flow_operators",
    "chapter": 9,
    "keywords": "нератор, Функции count, take и drop, количество, работа, функция высшего порядка, metanit, take, filter, отбор, статьи, drop, Python, элементы, коллекция, обучение, элемент, итерация, последовательность, habr, конец, аргумент, reduce, lambda, comprehension. \n, срез, длина, отсечение, обучающие статьи по программированию, эффективность, список, индекс, map, хабр, progvibe.ru, прогвайб, оптимизация, count, метанит, код, как научиться программировать, progvibe, функция, использование, программирование, библиотека, начало, позиция, практика, пример",
    "description": "",
    "name": "flow_operators"
  },
  {
    "id": 357,
    "title": "Функции map и transform",
    "url": "/tutorials/kotlin/general/flow_transform",
    "chapter": 9,
    "keywords": "юч-значение, метод, итерируемый объект, metanit, Java, кортеж, статьи, преобразование, параметр, рекурсия, императивное программирование, Python, цикл, коллекция, обучение, элемент, лямбда-функция, синтаксис, итерация, JavaScript, habr, применение, аргумент, значение, обучающие статьи по программированию, результат, C++, ключ, список, хабр, map, progvibe.ru, прогвайб, производительность, оптимизация, метанит, transform, побочный эффект \n, словарь, как научиться программировать, функция, progvibe, функциональное программирование, программирование, анонимная функция, возврат, Функции map и transform",
    "description": "",
    "name": "flow_transform"
  },
  {
    "id": 358,
    "title": "Функции reduce и fold",
    "url": "/tutorials/kotlin/general/flow_reduce",
    "chapter": 9,
    "keywords": "копление, редукция, начальное значение, вычисление максимума, фильтрация, итерируемый объект, metanit, функция fold, Java, кортеж, статьи, преобразование, суммирование, рекурсия, Python, обучение, Функции reduce и fold, агрегирование, свертка, итерация, JavaScript, habr, Функция reduce, аккумулятор, объединение, обучающие статьи по программированию, C++, список, хабр, progvibe.ru, прогвайб, метанит, lambda-выражение, высшего порядка, словарь, как научиться программировать, progvibe, C# \n, функциональное программирование, программирование, анонимная функция, сортировка, вычисление минимума",
    "description": "",
    "name": "flow_reduce"
  },
  {
    "id": 359,
    "title": "Объединение потоков",
    "url": "/tutorials/kotlin/general/flow_combine",
    "chapter": 9,
    "keywords": "оизводитель-потребитель, синхронизация потоков, deadlock, metanit, статьи, паттерны проектирования, конкурентность, поточная обработка, обучение, менеджмент ресурсов, мьютекс, habr, потоки, совместное использование ресурсов, семафор, взаимоблокировка, синхронизация, канал, конкурентные условия, асинхронное программирование. \n, конкурентный доступ, эффективность, блокировка, обучающие статьи по программированию, хабр, progvibe.ru, отзывчивость, гонка условий, поток, прогвайб, масштабирование, производительность, оптимизация, распараллеливание задач, монитор, метанит, многоядерные процессоры, как научиться программировать, параллельная обработка, progvibe, Объединение потоков, управление потоками, программирование, многопоточность, очередь, параллельное программирование",
    "description": "",
    "name": "flow_combine"
  }
]